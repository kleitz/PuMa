#
# This file is part of the project tutteli/purchase published under the Apache License 2.0
# For the full copyright and license information, please have a look at LICENSE in the
# root folder or visit https://github.com/robstoll/purchase
#

security:
    
    encoders:
        Tutteli\AppBundle\Entity\User:
            algorithm: bcrypt
            

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        db_provider:
            entity:
                class: TutteliAppBundle:User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            anonymous: ~
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            form_login:
                login_path: /login
                check_path: /login_check
                provider: db_provider
                csrf_parameter: csrf_token
                csrf_provider: security.csrf.token_manager
                username_parameter: username
                password_parameter: password
                success_handler: tutteli.auth_success_handler
                failure_handler: tutteli.auth_failure_handler
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            
            remember_me:
              key: "%secret%"
              lifetime: 15552000 # half a year in seconds
              path: '%baseUrl%'
              always_remember_me: true
              secure: true
            
            logout:
                path:   /logout
                target: /
                success_handler: tutteli.logout_success_handler
            
    access_control:
        # require ROLE_ADMIN for /admin*
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login.tpl$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/login/token$, role: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        - { path: ^/admin, role: ROLE_ADMIN, requires_channel: https }
        - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED, requires_channel: https }
